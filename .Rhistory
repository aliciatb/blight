write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
View(questions_translated)
View(final_questions_translated)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
file_16 ='AR_question_answers_translated_16.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
raw_16 = read.csv(paste0(lookup_dir,file_16),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15,raw_16)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
lookup_dir = '~/repos/cs-etl/Customer_Workflows/World Bank/Sudan/data/translations/'
file_1='AR_question_answers_translated_1.csv'
file_2='AR_question_answers_translated_2.csv'
file_3='AR_question_answers_translated_3.csv'
file_4='AR_question_answers_translated_4.csv'
file_7='AR_question_answers_translated_7.csv'
file_8='AR_question_answers_translated_8.csv'
file_9='AR_question_answers_translated_9.csv'
file_10='AR_question_answers_translated_10.csv'
file_5_6_11='AR_questions_answers_5_6_11.csv'
file_12='AR_question_answers_translated_12.csv'
file_13_1='AR_question_answers_translated_13_woObstacles.csv'
file_14='AR_question_answers_translated_14.csv'
file_15='AR_question_answers_translated_15.csv'
file_16 ='AR_question_answers_translated_16.csv'
raw_1 = read.csv(paste0(lookup_dir,file_1),stringsAsFactors = F)
raw_2 = read.csv(paste0(lookup_dir,file_2),stringsAsFactors = F)
raw_3 = read.csv(paste0(lookup_dir,file_3),stringsAsFactors = F)
raw_4 = read.csv(paste0(lookup_dir,file_4),stringsAsFactors = F)
raw_7 = read.csv(paste0(lookup_dir,file_7),stringsAsFactors = F)
raw_8 = read.csv(paste0(lookup_dir,file_8),stringsAsFactors = F)
raw_9 = read.csv(paste0(lookup_dir,file_9),stringsAsFactors = F)
raw_10 = read.csv(paste0(lookup_dir,file_10),stringsAsFactors = F)
raw_5_6_11 = read.csv(paste0(lookup_dir,file_5_6_11),stringsAsFactors = F)
raw_12 = read.csv(paste0(lookup_dir,file_12),stringsAsFactors = F)
raw_13_1 = read.csv(paste0(lookup_dir,file_13_1),stringsAsFactors = F)
raw_14 = read.csv(paste0(lookup_dir,file_14),stringsAsFactors = F)
raw_15 = read.csv(paste0(lookup_dir,file_15),stringsAsFactors = F)
raw_16 = read.csv(paste0(lookup_dir,file_16),stringsAsFactors = F)
# first 2 files had answer value which made things challenging
raw_1 = raw_1[,c('field','question_en','question_ar','answer_en','answer_ar')]
raw_2 = raw_2[,c('field','question_en','question_ar','answer_en','answer_ar')]
data = rbind(raw_1,raw_2,raw_3,raw_4,raw_7,raw_8,raw_9,raw_10,raw_5_6_11,raw_12,raw_13_1,raw_14,raw_15,raw_16)
write.csv(data, file=paste0(lookup_dir,'answers_all_translated.csv'), row.names = F, quote = F)
answers_translated = data[,c('answer_en','answer_ar')]
answers_translated$answer_en = trimws(answers_translated$answer_en)
answers_translated$answer_en = tolower(answers_translated$answer_en)
final_answers_translated = unique(answers_translated)
final_answers_translated = final_answers_translated[order(final_answers_translated$answer_en),]
write.csv(final_answers_translated, file=paste0(lookup_dir,'answer_lookup.csv'), row.names = F, quote = T)
questions_translated = data[,c('question_en','question_ar')]
# following abort r session
#questions_translated$question_en = trimws(questions_translated)
questions_translated$question_en = tolower(questions_translated$question_en)
final_questions_translated = unique(questions_translated)
write.csv(final_questions_translated, file=paste0(lookup_dir,'question_lookup.csv'), row.names = F, quote = T)
and incident_type = 'Use of force'
library(rattle)
install.packages('rattle',dependencies = TRUE)
install.packages("rattle", dependencies = TRUE)
library(rattle)
require(ggplot2)
require(GGally)
require(scales)
require(caret)
require(randomForest)
#install.packages('rattle',dependencies = TRUE)
library(rattle)
setwd('~/projects/blight')
data = read.csv('building_blight_features.csv',
header = TRUE)
# set categorical values
data$blight = factor(data$blight)
data = na.omit(data)
summary(data)
# select the training observations
in_train = createDataPartition(y = data$blight,
p = 0.75, # 75% in train, 25% in test
list = FALSE)
train = data[in_train, ]
test = data[-in_train, ]
# drop unuseful fields
train$Address = NULL
test$Address = NULL
train$Latitude = NULL
test$Latitude = NULL
train$Longitude = NULL
test$Longitude = NULL
train$ParcelNo = NULL
test$ParcelNo = NULL
train$PropAddr = NULL
test$PropAddr = NULL
train$ResYrBuilt = NULL
test$ResYrBuilt = NULL
train$TaxStatus = NULL
test$TaxStatus = NULL
# first model
tree_model = train(factor(blight) ~.,
method = 'rpart',
data = train)
print(tree_model)
print(tree_model$finalModel)
plot(varImp(tree_model))
# plot the tree!
plot(tree_model$finalModel)
text(tree_model$finalModel, use.n = TRUE, all = TRUE, cex = 0.60)
fancyRpartPlot(tree_model$finalModel)
fancyRpartPlot(tree_model$finalModel,main="Tree Model Decisions",sub="")
logistic_model = train(blight ~ .,
data = na.omit(train),
method = 'glm',
family = binomial,
preProcess = c('center', 'scale'))
summary(logistic_model)
plot(varImp(logistic_model))
# test predictions
logistic_predictions = predict(logistic_model, newdata = test)
confusionMatrix(logistic_predictions, test$blight)
# stepwise logisitic regression
step_model = train(blight ~ .,
data = na.omit(train),
method = 'glmStepAIC',
family = binomial,
preProcess = c('center', 'scale'))
summary(step_model)
plot(varImp(step_model))
step_predictions = predict(step_model, newdata = test)
confusionMatrix(step_predictions, test$blight)
# compare
results = resamples(list(logistic_model = logistic_model,
step_model = step_model))
# compare accuracy and kappa
summary(results)
# plot results
dotplot(results)
View(data)
warnings()
require(ggplot2)
require(GGally)
require(scales)
require(caret)
require(randomForest)
#install.packages('rattle',dependencies = TRUE)
#library(rattle)
setwd('~/projects/blight')
data = read.csv('building_blight_features.csv',
header = TRUE)
# set categorical values
data$blight = factor(data$blight)
data = na.omit(data)
summary(data)
# select the training observations
in_train = createDataPartition(y = data$blight,
p = 0.75, # 75% in train, 25% in test
list = FALSE)
train = data[in_train, ]
test = data[-in_train, ]
# drop unuseful fields
train$Address = NULL
test$Address = NULL
train$Latitude = NULL
test$Latitude = NULL
train$Longitude = NULL
test$Longitude = NULL
train$ParcelNo = NULL
test$ParcelNo = NULL
train$PropAddr = NULL
test$PropAddr = NULL
train$ResYrBuilt = NULL
test$ResYrBuilt = NULL
train$TaxStatus = NULL
test$TaxStatus = NULL
logistic_model = train(blight ~ .,
data = na.omit(train),
method = 'glm',
family = binomial,
preProcess = c('center', 'scale'))
summary(logistic_model)
plot(varImp(logistic_model))
# test predictions
logistic_predictions = predict(logistic_model, newdata = test)
confusionMatrix(logistic_predictions, test$blight)
require(ggplot2)
require(GGally)
require(scales)
require(caret)
require(randomForest)
#install.packages('rattle',dependencies = TRUE)
#library(rattle)
setwd('~/projects/blight')
data = read.csv('building_blight_features.csv',
header = TRUE)
# set categorical values
data$blight = factor(data$blight)
data = na.omit(data)
summary(data)
# select the training observations
in_train = createDataPartition(y = data$blight,
p = 0.75, # 75% in train, 25% in test
list = FALSE)
train = data[in_train, ]
test = data[-in_train, ]
# drop unuseful fields
train$Address = NULL
test$Address = NULL
train$Latitude = NULL
test$Latitude = NULL
train$Longitude = NULL
test$Longitude = NULL
train$ParcelNo = NULL
test$ParcelNo = NULL
train$PropAddr = NULL
test$PropAddr = NULL
train$ResYrBuilt = NULL
test$ResYrBuilt = NULL
train$TaxStatus = NULL
test$TaxStatus = NULL
logistic_model = train(blight ~ .,
data = na.omit(train),
method = 'glm',
family = binomial,
preProcess = c('center', 'scale'))
summary(logistic_model)
plot(varImp(logistic_model))
# test predictions
logistic_predictions = predict(logistic_model, newdata = test)
confusionMatrix(logistic_predictions, test$blight)
# first model
tree_model = train(factor(blight) ~.,
method = 'rpart',
data = train)
print(tree_model)
print(tree_model$finalModel)
plot(varImp(tree_model))
# plot the tree!
plot(tree_model$finalModel)
text(tree_model$finalModel, use.n = TRUE, all = TRUE, cex = 0.60)
#fancyRpartPlot(tree_model$finalModel,main="Tree Model Decisions",sub="")
# test the predictions
tree_predictions = predict(tree_model, newdata = test)
confusionMatrix(tree_predictions, test$blight)
bagged_model = train(blight ~.,
method = 'treebag',
data = train)
print(bagged_model)
print(bagged_model$finalModel)
bagged_predictions = predict(bagged_model, test)
confusionMatrix(bagged_predictions, test$blight)
boost_model = train(blight ~.,
method = 'gbm',
data = train,
verbose = FALSE)
install.packages('gbm',dependencies = TRUE)
